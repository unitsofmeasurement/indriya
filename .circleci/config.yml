# Java Maven CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

parameters:
  deploy_release:
    type: boolean
    default: false

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:21.0.2
 
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xms512M -Xmx3G
    
    steps:
      - checkout
      
      - run: 
          name: Adjusting toolchain
          command: sed -i "s|JDK_home|$JAVA_HOME|g" ci-toolchains.xml
        
      # run tests!
      - run: 
          name: Running tests
          command: mvn --batch-mode test jacoco:report coveralls:report -t ci-toolchains.xml
      
      # check test results
      - run: 
          name: Checking test results
          command: sh src/main/config/checktests.sh
      
  deployment:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:21.0.2

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xms512M -Xmx2G
    
    steps:
      - checkout
      
      - run:
          name: Adjusting toolchain
          command: sed -i "s|JDK_home|$JAVA_HOME|g" ci-toolchains.xml
        
      # run deployment!
      - run:
          name: Deploying snapshot
          command: mvn --batch-mode deploy -Dmaven.test.skip -DcreateDocs=true -s settings.xml -t ci-toolchains.xml
          
  # TODO adjust to release, e.g. signing
  release_deployment:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:21.0.2

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xms512M -Xmx2G
    
    steps:
      - checkout
      
      - run:
          name: Adjusting toolchain
          command: sed -i "s|JDK_home|$JAVA_HOME|g" ci-toolchains.xml
        
      # run deployment!
      - run:
          name: Deploying snapshot
          command: mvn --batch-mode deploy -Dmaven.test.skip -DcreateDocs=true -s settings.xml -t ci-toolchains.xml          
          
workflows:
  build_deploy:
    unless: << pipeline.parameters.deploy_release >>
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deployment:
          requires:
            - build

  build_deploy_release:
    when: << pipeline.parameters.deploy_release >>
    jobs:
      - build
      - release_deployment:
          requires:
            - build